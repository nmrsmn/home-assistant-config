switch:
  - platform: mqtt
    name: dryer
    state_topic: "tasmota/dryer/stat/POWER"
    command_topic: "tasmota/dryer/cmnd/POWER"
    availability_topic: "tasmota/dryer/tele/LWT"
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false

sensor:
  - platform: mqtt
    name: dryer_today
    state_topic: "tasmota/dryer/tele/SENSOR"
    availability_topic: "tasmota/dryer/tele/LWT"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
    payload_available: "Online"
    payload_not_available: "Offline"

  - platform: mqtt
    name: dryer_current
    state_topic: "tasmota/dryer/tele/SENSOR"
    availability_topic: "tasmota/dryer/tele/LWT"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "W"
    payload_available: "Online"
    payload_not_available: "Offline"

binary_sensor:
  - platform: template
    sensors:
      dryer_running:
        friendly_name: "Droger bezig"
        delay_on:
          minutes: 5
        delay_off:
          minutes: 5
        value_template: >-
          {{ states('sensor.dryer_current') | float > 10 }}
        icon_template: >-
          {% if is_state("binary_sensor.dryer_running", "on") %}
            mdi:tumble-dryer
          {% else %}
            mdi:tumble-dryer-off
          {% endif %}

automation:
  - id: dryer_done_notification
    alias: "Droger klaar notificatie"
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.dryer_running
        from: 'on'
        to: 'off'
    action:
#      - service: switch.turn_off
#        entity_id: switch.dryer
      - service: notify.household
        data:
          title: "Droger"
          message: "De droger is klaar!"
          data:
            apns_headers:
              'apns-collapse-id': 'dryer-done'
            push:
              thread-id: 'Droger'
